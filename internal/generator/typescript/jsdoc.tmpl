{{- /*gotype: github.com/TBXark/telegram-bot-api-types/internal/scrape.APIResponse*/ -}}
// Code generated by telegram-bot-api-types. DO NOT EDIT.
// Version {{.Version}}
{{range .Enums}}
/**
 * @typedef {({{range $i, $v := .Values}}{{if gt $i 0}} | {{end}}'{{.}}'{{end}})} {{.Name}}
 */
{{end -}}

{{range .Types}}
/**
 * {{.Href}}{{range .Description}}
 * {{.}}{{end}}
{{- if IsAbstractType .}}
 * @typedef { {{- UnionsTypes .Subtypes -}} } {{.Name}}
{{- else}}
 * @typedef {Object} {{.Name}}
{{- range .Fields}}
 * @property { {{- ToFieldTypes . -}} } {{if .Required}}{{.Name}}{{else}}[{{.Name}}]{{end}} - {{.Description}}
{{- end}}
{{- end}}
 */
{{end}}
/**
 * @template T
 * @typedef {Object} ResponseSuccess<T>
 * @property {true} ok
 * @property {T} result
 */

/**
 * @typedef {Object} ResponseError
 * @property {false} ok
 * @property {number} error_code
 * @property {string} description
 */

/**
 * @typedef {true} SuccessWithOutData
 */

/**
 * @typedef {ResponseSuccess<SuccessWithOutData>} ResponseWithOutData
 */

/**
 * @typedef {ResponseSuccess<Message>} ResponseWithMessage
 */

{{range .Methods}}
{{if HasParams .}}
/**
 * {{.Href}}{{range .Description}}
 * {{.}}{{end}}
 * @typedef {Object} {{ToPascalCase .Name}}Params
{{- range .Fields}}
 * @property { {{- ToFieldTypes . -}} } {{if .Required}}{{.Name}}{{else}}[{{.Name}}]{{end}} - {{.Description}}
{{- end}}
 */
{{end -}}
{{- if HasResponse .Returns}}
/**
 * @typedef {ResponseSuccess<{{UnionsTypes .Returns}}>} {{ToPascalCase .Name}}Response
 */
{{end}}
/**
 * {{.Href}}
 * @interface {{ToPascalCase .Name}}Request
 *
 {{- range .Description}}
 * {{.}}
 {{end -}}
 * @function {{.Name}}
 * @memberof {{ToPascalCase .Name}}Request
{{if HasParams .}} * @param { {{ToPascalCase .Name}}Params } {{if IsParamsOptional .Fields}}[params]{{else}}params{{end}}{{end}}
 * @returns {Promise<Response>}
 *
{{- if HasResponse .Returns}}
 * @function {{.Name}}WithReturns
 * @memberof {{ToPascalCase .Name}}Request
{{if HasParams .}} * @param { {{ToPascalCase .Name}}Params } {{if IsParamsOptional .Fields}}[params]{{else}}params{{end}}{{end}}
 * @returns {Promise<{{ToPascalCase .Name}}Response>}
{{- end}}
 */
{{end}}

/**
 * @typedef {({{range $i, $v := .Methods}}{{if gt $i 0}} | {{end}}'{{.Name}}'{{end}})} BotMethod
 */

 /**
  * @typedef {({{range $i, $v := .Methods}}{{if gt $i 0}} & {{end}}{{ToPascalCase .Name}}Request{{end}})} AllBotMethods
  */
